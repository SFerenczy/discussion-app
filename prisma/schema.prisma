datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password    Password?
  discussions Discussion[]
  Note        Note[]
  Viewpoint   Viewpoint[]
  Argument    Argument[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Discussion {
  id    String @id @default(cuid())
  title String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  creator   User   @relation(fields: [creatorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  creatorId String

  viewpoints Viewpoint[]
}

model Viewpoint {
  id   String @id @default(cuid())
  text String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  discussion   Discussion @relation(fields: [discussionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  discussionId String

  creator   User   @relation(fields: [creatorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  creatorId String

  Argument Argument[]
}

model Argument {
  id   String @id @default(cuid())
  text String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  viewpoint   Viewpoint @relation(fields: [viewpointId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  viewpointId String

  creator   User   @relation(fields: [creatorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  creatorId String

  attackedArguments  Argument[] @relation("Attacks")
  attackingArguments Argument[] @relation("Attacks")
}
